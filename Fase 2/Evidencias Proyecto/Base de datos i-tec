-- --------------------------------------------------------
-- Host:                         E:\apps\i-Tec\server\nfc_readings.db
-- Versión del servidor:         3.50.1
-- SO del servidor:              
-- HeidiSQL Versión:             12.11.0.7065
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES  */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- Volcando estructura de base de datos para nfc_readings
CREATE DATABASE IF NOT EXISTS "nfc_readings";
;

-- Volcando estructura para tabla nfc_readings.areas
CREATE TABLE IF NOT EXISTS areas (
    area_id     INTEGER PRIMARY KEY,
    nombre_area TEXT NOT NULL UNIQUE
);
;

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.entregas
CREATE TABLE IF NOT EXISTS entregas (
    entrega_id       INTEGER PRIMARY KEY,
    usuario_id       INTEGER NOT NULL,
    producto_id      INTEGER NOT NULL,
    estado_equipo_id INTEGER NOT NULL,
    tipo_entidad     TEXT DEFAULT 'Oficina',
    fecha_entrega    TEXT NOT NULL,
    FOREIGN KEY (estado_equipo_id) REFERENCES estados_equipo (estado_equipo_id),
    FOREIGN KEY (producto_id) REFERENCES productos (producto_id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios (usuario_id)
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.equipo_software
CREATE TABLE IF NOT EXISTS equipo_software (
    equipo_software_id INTEGER PRIMARY KEY,
    producto_id        INTEGER NOT NULL,
    software_id        INTEGER NOT NULL,
    version_instalada  TEXT,
    fecha_instalacion  TEXT DEFAULT CURRENT_TIMESTAMP,
    tecnico_id         INTEGER,
    observaciones      TEXT,
    FOREIGN KEY (producto_id) REFERENCES productos (producto_id) ON DELETE CASCADE,
    FOREIGN KEY (software_id) REFERENCES software_catalogo (software_id) ON DELETE CASCADE,
    FOREIGN KEY (tecnico_id) REFERENCES usuarios (usuario_id)
);
CREATE INDEX idx_equipo_software_producto ON equipo_software (producto_id);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.estados_equipo
CREATE TABLE IF NOT EXISTS estados_equipo (
    estado_equipo_id INTEGER PRIMARY KEY,
    nombre           TEXT NOT NULL
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.hardware_catalogo
CREATE TABLE IF NOT EXISTS hardware_catalogo (
    hardware_id           INTEGER PRIMARY KEY,
    marca                 TEXT,
    modelo                TEXT,
    mac                   TEXT UNIQUE,
    especificaciones      TEXT,
    productos_producto_id INTEGER NOT NULL,
    FOREIGN KEY (productos_producto_id) REFERENCES productos (producto_id)
);
;

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.historico_asignaciones
CREATE TABLE IF NOT EXISTS historico_asignaciones (
    historico_id       INTEGER PRIMARY KEY,
    usuario_id         INTEGER NOT NULL,
    producto_id        INTEGER NOT NULL,
    fecha_asignacion   TEXT DEFAULT CURRENT_TIMESTAMP,
    fecha_devolucion   TEXT,
    tipo_movimiento_id INTEGER NOT NULL,
    responsable_id     INTEGER,
    ubicacion_origen   TEXT,
    ubicacion_destino  TEXT,
    comentarios        TEXT,
    FOREIGN KEY (producto_id) REFERENCES productos (producto_id) ON DELETE CASCADE,
    FOREIGN KEY (responsable_id) REFERENCES usuarios (usuario_id),
    FOREIGN KEY (tipo_movimiento_id) REFERENCES tipos_movimiento (tipo_movimiento_id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios (usuario_id) ON DELETE CASCADE
);
CREATE INDEX idx_historico_usuario_fecha ON historico_asignaciones (usuario_id, fecha_asignacion);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.mantenimientos
CREATE TABLE IF NOT EXISTS mantenimientos (
    mantenimiento_id INTEGER PRIMARY KEY,
    producto_id      INTEGER NOT NULL,
    fecha_inicio     TEXT DEFAULT CURRENT_TIMESTAMP,
    fecha_fin        TEXT,
    descripcion      TEXT,
    tecnico_id       INTEGER,
    FOREIGN KEY (producto_id) REFERENCES productos (producto_id),
    FOREIGN KEY (tecnico_id) REFERENCES usuarios (usuario_id)
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.modulos_venta
CREATE TABLE IF NOT EXISTS modulos_venta (
    modulo_id  INTEGER PRIMARY KEY,
    nombre     TEXT NOT NULL UNIQUE,
    ubicacion  TEXT,
    estado     TEXT DEFAULT 'Activo',
    created_at TEXT DEFAULT CURRENT_TIMESTAMP,
    updated_at TEXT
);
;

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.movimientos_inventario
CREATE TABLE IF NOT EXISTS movimientos_inventario (
                movimiento_id INTEGER PRIMARY KEY AUTOINCREMENT,
                producto_id INTEGER NOT NULL,
                tipo_movimiento TEXT NOT NULL CHECK(tipo_movimiento IN ('Entrada', 'Salida')),
                cantidad INTEGER NOT NULL,
                justificacion TEXT,
                usuario_responsable TEXT NOT NULL,
                fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (producto_id) REFERENCES productos (producto_id)
            );

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.nfc_readings
CREATE TABLE IF NOT EXISTS nfc_readings (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                device_info TEXT,
                nfc_data TEXT,
                timestamp TEXT,
                formatted_time TEXT,
                ip_address TEXT,
                user_agent TEXT
            );

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.personas
CREATE TABLE IF NOT EXISTS "personas" (
	"rut" TEXT NOT NULL,
	"dv" INTEGER NOT NULL,
	"primer_nombre" TEXT NOT NULL,
	"segundo_nombre" TEXT NULL,
	"apellido_pat" TEXT NOT NULL,
	"apellido_mat" TEXT NOT NULL,
	"telefono" TEXT NULL,
	"correo" TEXT NULL,
	PRIMARY KEY ("rut")
);
;

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.productos
CREATE TABLE IF NOT EXISTS productos (
    producto_id      INTEGER PRIMARY KEY,
    nombre           TEXT NOT NULL,
    tipo_producto_id INTEGER NOT NULL,
    numero_serie     TEXT UNIQUE,
    numero_factura   TEXT NOT NULL,
    fecha_compra     TEXT NOT NULL,
    valor_unitario   REAL NOT NULL,
    proveedor_id     INTEGER,
    garantia_hasta   TEXT,
    estado_equipo_id INTEGER NOT NULL,
    ubicacion_fisica TEXT,
    fecha_baja       TEXT,
    created_at       TEXT DEFAULT CURRENT_TIMESTAMP,
    updated_at       TEXT,
    activo           TEXT DEFAULT 'Activo', stock_actual INTEGER NOT NULL DEFAULT 1,
    FOREIGN KEY (estado_equipo_id) REFERENCES estados_equipo (estado_equipo_id),
    FOREIGN KEY (proveedor_id) REFERENCES proveedores (proveedor_id),
    FOREIGN KEY (tipo_producto_id) REFERENCES tipos_producto (tipo_producto_id)
);
;

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.proveedores
CREATE TABLE IF NOT EXISTS proveedores (
    proveedor_id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    contacto TEXT,
    telefono TEXT,
    email TEXT,
    direccion TEXT
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.roles
CREATE TABLE IF NOT EXISTS "roles" (
	"id_rol" INTEGER NOT NULL,
	"nombre_rol" VARCHAR(30) NOT NULL
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.software_catalogo
CREATE TABLE IF NOT EXISTS software_catalogo (
    software_id               INTEGER PRIMARY KEY,
    nombre_software           TEXT NOT NULL,
    proveedor_software        TEXT,
    licencia                  TEXT,
    instrucciones_instalacion TEXT
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.tipos_movimiento
CREATE TABLE IF NOT EXISTS tipos_movimiento (
    tipo_movimiento_id INTEGER PRIMARY KEY,
    nombre             TEXT NOT NULL
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.tipos_producto
CREATE TABLE IF NOT EXISTS "tipos_producto" (
	"tipo_producto_id" INTEGER NOT NULL,
	"tipo_producto" TEXT NOT NULL,
	PRIMARY KEY ("tipo_producto_id")
);

-- La exportación de datos fue deseleccionada.

-- Volcando estructura para tabla nfc_readings.usuarios
CREATE TABLE IF NOT EXISTS "usuarios" (
    "usuario_id" INTEGER NOT NULL,
    "nombre_usuario" TEXT NOT NULL UNIQUE,
    "password" TEXT NOT NULL,
    "activo" TEXT NULL,
    "persona_rut" TEXT NOT NULL,
    "area_id" INTEGER NULL,
    "modulo_venta_id" INTEGER NULL,
    "fecha_creacion" TEXT NULL,
    "fecha_modificacion" TEXT NULL,
    "id_rol" INTEGER NULL,
    PRIMARY KEY ("usuario_id"),
    CONSTRAINT "0" FOREIGN KEY ("persona_rut") REFERENCES "personas" ("rut") ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT "1" FOREIGN KEY ("modulo_venta_id") REFERENCES "modulos_venta" ("modulo_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT "2" FOREIGN KEY ("area_id") REFERENCES "areas" ("area_id") ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT "3" FOREIGN KEY ("id_rol") REFERENCES "roles" ("id_rol") ON UPDATE NO ACTION ON DELETE NO ACTION
);
;

-- La exportación de datos fue deseleccionada.

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
